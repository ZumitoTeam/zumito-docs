"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[832],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=m(e,["components","mdxType","originalType","parentName"]),d=l(n),p=r,f=d["".concat(c,".").concat(p)]||d[p]||s[p]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var m={};for(var c in t)hasOwnProperty.call(t,c)&&(m[c]=t[c]);m.originalType=e,m.mdxType="string"==typeof e?e:r,i[1]=m;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3455:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>m,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2,title:"Create command",description:"A quick guide on how to create a command."},i="Create command",m={unversionedId:"custom/create-command",id:"custom/create-command",title:"Create command",description:"A quick guide on how to create a command.",source:"@site/docs/custom/create-command.md",sourceDirName:"custom",slug:"/custom/create-command",permalink:"/es/docs/custom/create-command",draft:!1,editUrl:"https://github.com/fernandomema/zumito-docs/tree/main/packages/create-docusaurus/templates/shared/docs/custom/create-command.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Create command",description:"A quick guide on how to create a command."},sidebar:"tutorialSidebar",previous:{title:"Quick start guide",permalink:"/es/docs/custom/quickstart"},next:{title:"Text Formatter",permalink:"/es/docs/custom/utilities/text-formatter"}},c={},l=[{value:"Command parameters",id:"command-parameters",level:2},{value:"More info",id:"more-info",level:2}],u={toc:l};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-command"},"Create command"),(0,r.kt)("p",null,"To start creating a command, you just need to run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx zumito-cli create command\n")),(0,r.kt)("p",null,"It will ask you for the name of the command, and the module where you want to create it.\n\u2139\ufe0f Don't worry if you don't created the module yet, the CLI will create it for you."),(0,r.kt)("p",null,"After that, it will create a file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/modules/<module>/commands")," folder with the name of the command.\nThe file will contain the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { Command, CommandParameters, ZumitoFramework, CommandType, SelectMenuParameters } from "zumito-framework";\n\nexport class CommandName extends Command {\n\n    execute({ message, interaction, args, client, framework, guildSettings }: CommandParameters): void {\n        // Command code\n    }\n\n    async selectMenu({ path, interaction, client, framework, guildSettings }: SelectMenuParameters): Promise<void> {\n        \n    }\n\n}\n')),(0,r.kt)("p",null,"From here, you can start coding your command."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"execute")," is the function that will be executed when the command is executed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"selectMenu")," is the function that will be executed when a select menu is executed.")),(0,r.kt)("h2",{id:"command-parameters"},"Command parameters"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"execute")," function receives a ",(0,r.kt)("inlineCode",{parentName:"p"},"CommandParameters")," object, which contains the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message")," - Discord.Message object. Undefined if the command is executed from an interaction (slash command).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"interaction")," - Discord.Interaction object. Undefined if the command is executed from a message with the prefix.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"args")," - Arguments of the command. Contains the arguments user passed to the command."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can get the arguments using the ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," method, which receives the name of the argument and the type of the argument."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'args.get("argumentName"); // Output: "Argument value"\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Output comes in the type you specified, so if you specify a number, the output will be a number and if you specify a user it will be a Discord.User object.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"client")," - Discord.Client object.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"framework")," - ZumitoFramework object.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"guildSettings")," - Guild settings object. Contains the settings of the guild where the command was executed. The data is loaded from the database on each command execution.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"trans")," - A shorthand function to translate strings. It receives the key of the string and the variables to replace in the string."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"It does not require language to be specified, it will use the language of the guild where the command was executed."),(0,r.kt)("li",{parentName:"ul"},"The key is relative to current command, so if you have a key named ",(0,r.kt)("inlineCode",{parentName:"li"},"command.yourCommandName.yourKey"),", you can use it like this: ",(0,r.kt)("inlineCode",{parentName:"li"},'trans("yourKey")'),". if you want to use a key from anywhere else, you can use ",(0,r.kt)("inlineCode",{parentName:"li"},"$")," prefix, like this: ",(0,r.kt)("inlineCode",{parentName:"li"},'trans("$command.yourCommandName.yourKey")'),".")))),(0,r.kt)("h2",{id:"more-info"},"More info"),(0,r.kt)("p",null,"You can find more information about the command, like his properties, methods and events in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/framework/modules/command"},"Framework Command")," page."))}s.isMDXComponent=!0}}]);