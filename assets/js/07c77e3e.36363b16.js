"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9358],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>p});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=d(n),p=r,f=c["".concat(s,".").concat(p)]||c[p]||u[p]||o;return n?a.createElement(f,i(i({ref:t},m),{},{components:n})):a.createElement(f,i({ref:t},m))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},593:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3,title:"Create database model",description:"A quick guide on how to create a database model."},i="Create database model",l={unversionedId:"custom/create-model",id:"custom/create-model",title:"Create database model",description:"A quick guide on how to create a database model.",source:"@site/docs/custom/create-model.md",sourceDirName:"custom",slug:"/custom/create-model",permalink:"/docs/custom/create-model",draft:!1,editUrl:"https://github.com/fernandomema/zumito-docs/tree/main/packages/create-docusaurus/templates/shared/docs/custom/create-model.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Create database model",description:"A quick guide on how to create a database model."},sidebar:"tutorialSidebar",previous:{title:"Create command",permalink:"/docs/custom/create-command"},next:{title:"Create event",permalink:"/docs/custom/create-event"}},s={},d=[{value:"usage",id:"usage",level:2}],m={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-database-model"},"Create database model"),(0,r.kt)("p",null,"Database models are used to define the structure of the data that will be stored in the database. This allows you to define the data your module will store in the database.\nIn each model, we define all the properties with their types, and their respective relationships with other models."),(0,r.kt)("p",null,"For start creating a model, you just need to run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx zumito-cli create model\n")),(0,r.kt)("p",null,"It will ask you for the name of the model, and the module where you want to create it."),(0,r.kt)("p",null,"\u2139\ufe0f Don't worry if you don't created the module yet, the CLI will create it for you."),(0,r.kt)("p",null,"After that, it will create a file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/modules/<module>/models")," folder with the name of the model.\nThe file will contain the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { DatabaseModel } from '../../types/DatabaseModel.js';\n\nexport class Guild extends DatabaseModel {\n    getModel(schema: any) {\n        return {}\n    }\n\n    define(model: any, models: any): void {\n        \n    }\n}\n")),(0,r.kt)("p",null,"To start defining the model, you need to define the properties of the model in the ",(0,r.kt)("inlineCode",{parentName:"p"},"getModel")," function.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"getModel")," function receives a ",(0,r.kt)("inlineCode",{parentName:"p"},"schema")," object, which contains the available types to define the properties of the model."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schema.String")," - Defines a string property."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schema.Number")," - Defines a number property."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schema.Boolean")," - Defines a boolean property."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schema.Date")," - Defines a date property."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schema.Blob")," - Defines a blob property."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schema.JSON")," - Defines a JSON property.")),(0,r.kt)("p",null,"Now, let's define an example model for an user.\nFirst in the ",(0,r.kt)("inlineCode",{parentName:"p"},"getModel")," function, we will define the properties of the model:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"getModel(schema: any) {\n    return {\n        username: {\n            type: schema.String,\n            required: true\n        },\n        age: {\n            type: schema.Number,\n            required: true\n        },\n        lang: {\n            type: schema.String,\n            default: 'en',\n        }\n        isPremium: {\n            type: schema.Boolean,\n            required: true,\n            default: false\n        },\n        createdAt: {\n            type: schema.Date,\n            required: true,\n        }\n    }\n}\n")),(0,r.kt)("p",null,"then, in the ",(0,r.kt)("inlineCode",{parentName:"p"},"define")," function, we can define validations and relationships with other models."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"define(model: any, models: any): void {\n\n        // Define validations\n        model.validatesUniquenessOf('username');\n        model.validatesInclusionOf('lang', { in: ['en', 'es'] });\n\n        // Define relationships\n        model.hasMany(models.Guild, { as: 'guilds', foreignKey: 'ownerId' });\n\n        // define any custom method for instance\n        model.prototype.getNameAndAge = function () {\n            return this.name + ', ' + this.age;\n        };\n    }\n")),(0,r.kt)("h2",{id:"usage"},"usage"),(0,r.kt)("p",null,"To use the model in a command, you just need to get the model from framework.database.models and use it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { Command, CommandParameters, ZumitoFramework, CommandType } from \"zumito-framework\";\n\nexport class CommandName extends Command {\n\n    execute({ message, interaction, args, client, framework, guildSettings }: CommandParameters): void {\n        let user = framework.database.models.User.findOne({ where: { username: 'JhonDoe' } }).then((err, user) => {\n            user.username = 'JhonDoe2';\n            user.save();\n        });\n    }\n\n}\n")),(0,r.kt)("p",null,"You can find more information about the usage in the ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/canario"},"canario")," package page."))}u.isMDXComponent=!0}}]);